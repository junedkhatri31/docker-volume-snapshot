#!/bin/bash
set -e -o pipefail

programname=`basename "$0"`

create() {
    local source="$1"
    local destination="$2"
    local directory=`dirname "$destination"`
    if [ "$directory" == "." ]; then directory=$(pwd); fi
    local filename=`basename "$destination"`
    docker run --rm -v "$source:/source" -v "$directory:/dest" busybox tar cvaf "/dest/$filename" -C /source .
}

restore() {
    local source="$1"
    local destination="$2"
    local directory=`dirname "$source"`
    if [ "$directory" == "." ]; then directory=$(pwd); fi
    local filename=`basename "$source"`
    docker run --rm -v "$destination:/dest" -v "$directory:/source" busybox tar xvf "/source/$filename" -C /dest
}

display_usage() {
    echo "usage: $programname create source [destination]"
    echo "usage: $programname create-all [destination]"
    echo "usage: $programname restore [source] destination"
    echo "usage: $programname restore-all archive"
    echo "  create         create snapshot file from docker volume"
    echo "  create-all     create snapshots of all docker volumes into single archive"
    echo "  restore        restore snapshot file to docker volume"
    echo "  restore-all    restore all volumes from combined archive"
    echo "  source         source path"
    echo "  destination    destination path"
    echo "  archive        archive path (default: docker-volumes.tar.gz)"
    echo
    echo "If destination is not provided for create:"
    echo "  uses source name + .tar.gz"
    echo "If source is not provided for restore:"
    echo "  uses destination name + .tar.gz"
    echo
    echo "Tip: Supports tar's compression algorithms automatically"
    echo "     based on the file extention, for example .tar.gz"
    echo
    echo "Examples:"
    echo "docker-volume-snapshot create xyz_volume"
    echo "docker-volume-snapshot create xyz_volume xyz_volume.tar"
    echo "docker-volume-snapshot create xyz_volume xyz_volume.tar.gz"
    echo "docker-volume-snapshot create-all"
    echo "docker-volume-snapshot create-all all-volumes.tar.gz"
    echo "docker-volume-snapshot restore xyz_volume"
    echo "docker-volume-snapshot restore xyz_volume.tar xyz_volume"
    echo "docker-volume-snapshot restore xyz_volume.tar.gz xyz_volume"
    echo "docker-volume-snapshot restore-all docker-volumes.tar.gz"
}

case "$1" in
    "create")
        if [[ -z "$2" ]]; then display_usage; exit 1; fi
        source="$2"
        destination="${3:-$2.tar.gz}"
        create "$source" "$destination"
        ;;
    "create-all")
        archive="${2:-docker-volumes.tar.gz}"

        echo "Getting list of Docker volumes..."
        volumes=$(docker volume ls -q)

        if [ -z "$volumes" ]; then
            echo "No Docker volumes found."
            exit 0
        fi
        temp_dir="/tmp/docker-volume-snapshots-$$"
        mkdir -p "$temp_dir"

        echo "Creating individual volume snapshots..."
        for volume in $volumes; do
            echo "Backing up volume: $volume"
            create "$volume" "$temp_dir/$volume.tar.gz"
        done

        echo "Creating combined archive: $archive"
        directory=$(dirname "$archive")
        if [ "$directory" == "." ]; then directory=$(pwd); fi
        filename=$(basename "$archive")

        docker run --rm -v "$temp_dir:/source" -v "$directory:/dest" busybox tar cvaf "/dest/$filename" -C /source .

        echo "Cleaning up temporary files..."
        rm -rf "$temp_dir"
        echo "All volumes backed up to: $archive"
        ;;
    "restore")
        if [[ -z "$2" ]]; then display_usage; exit 1; fi

        if [[ -z "$3" ]]; then
            # Only one argument provided - it's the destination
            destination="$2"
            source="$destination.tar.gz"
        else
            # Two arguments provided - source and destination
            source="$2"
            destination="$3"
        fi

        restore "$source" "$destination"
        ;;
    "restore-all")
        if [[ -z "$2" ]]; then display_usage; exit 1; fi
        archive="$2"

        temp_dir="/tmp/docker-volume-snapshots-$$"
        mkdir -p "$temp_dir"

        directory=$(dirname "$archive")
        if [ "$directory" == "." ]; then directory=$(pwd); fi
        filename=$(basename "$archive")

        docker run --rm -v "$directory:/source" -v "$temp_dir:/dest" busybox tar xvf "/source/$filename" -C /dest

        for volume_archive in "$temp_dir"/*.tar.gz; do
            if [ -f "$volume_archive" ]; then
                volume_name=$(basename "$volume_archive" .tar.gz)
                echo "Restoring volume: $volume_name from $volume_archive"
                restore "$volume_archive" "$volume_name"
            fi
        done

        echo "Cleaning up temporary files..."
        rm -rf "$temp_dir"
        echo "All volumes restored from: $archive"
        ;;
    *)
        display_usage
        exit 1 # Command to come out of the program with status 1
        ;;
esac
